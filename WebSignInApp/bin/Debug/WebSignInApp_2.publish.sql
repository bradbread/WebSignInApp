/*
Deployment script for SQL-Tasks

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SQL-Tasks"
:setvar DefaultFilePrefix "SQL-Tasks"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Rename refactoring operation with key 7c4c4180-fe86-4f63-bade-1af195c813ee is skipped, element [dbo].[Room].[Id] (SqlSimpleColumn) will not be renamed to buildingCode';


GO
PRINT N'Rename refactoring operation with key 2b0c434d-ac83-4d05-a813-45ba71e6a3fd is skipped, element [dbo].[Room].[roomId] (SqlSimpleColumn) will not be renamed to roomNumber';


GO
PRINT N'Rename refactoring operation with key 01dd2add-a1f8-4d3b-9945-5ed63504d209, c4967e29-9ccb-4d56-8b3a-a58a233b8cca is skipped, element [dbo].[Teacher].[Id] (SqlSimpleColumn) will not be renamed to teacherId';


GO
PRINT N'Rename refactoring operation with key 83b3cbd7-05cd-4aa2-9a7f-5048c4126c95, 4d7b821c-f153-4580-b11d-db551d6127dd is skipped, element [dbo].[Student].[Id] (SqlSimpleColumn) will not be renamed to studentId';


GO
PRINT N'Rename refactoring operation with key 9d2a4dd2-95c4-4114-a442-13998b458840, 054407b5-02ce-4bfc-80e0-c2de672724e0 is skipped, element [dbo].[Class].[Id] (SqlSimpleColumn) will not be renamed to classId';


GO
PRINT N'Rename refactoring operation with key 68c1b7de-bad6-4619-8f2d-f3103e08fb69 is skipped, element [dbo].[Enrollment].[Id] (SqlSimpleColumn) will not be renamed to StudentId';


GO
PRINT N'Rename refactoring operation with key 17872c18-9699-400e-b21b-f630610aa5b0, 5f24df8a-4e0d-47a5-8d46-7b0cb3d38f3d, be75107b-d613-4f3c-bc3e-1cc6459ee75c is skipped, element [dbo].[Room].[Id] (SqlSimpleColumn) will not be renamed to roomId';


GO
PRINT N'Rename refactoring operation with key 1a1be81c-ebb1-47c7-b465-66ec9be39efd, 1150a31e-a44f-4b62-bf66-85da7b03dcf5 is skipped, element [dbo].[Log].[currentTime] (SqlSimpleColumn) will not be renamed to time';


GO
PRINT N'Creating [dbo].[Class]...';


GO
CREATE TABLE [dbo].[Class] (
    [classId]   INT           NOT NULL,
    [day]       NCHAR (10)    NULL,
    [startTime] TIME (7)      NULL,
    [endTime]   TIME (7)      NULL,
    [name]      NVARCHAR (50) NULL,
    [labels]    NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([classId] ASC)
);


GO
PRINT N'Creating [dbo].[Enrollment]...';


GO
CREATE TABLE [dbo].[Enrollment] (
    [studentId] INT NOT NULL,
    [classId]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([studentId] ASC, [classId] ASC)
);


GO
PRINT N'Creating [dbo].[Log]...';


GO
CREATE TABLE [dbo].[Log] (
    [studentId]       INT           NOT NULL,
    [classId]         INT           NOT NULL,
    [time]            TIME (7)      NOT NULL,
    [actionPerformed] NVARCHAR (50) NOT NULL,
    [teacherId]       INT           NOT NULL,
    [roomId]          NVARCHAR (50) NOT NULL,
    [date]            DATE          NOT NULL,
    [studentFName]    NVARCHAR (50) NOT NULL,
    [studentSurname]  NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([date] ASC, [actionPerformed] ASC, [time] ASC, [classId] ASC, [studentId] ASC)
);


GO
PRINT N'Creating [dbo].[Room]...';


GO
CREATE TABLE [dbo].[Room] (
    [roomId] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([roomId] ASC)
);


GO
PRINT N'Creating [dbo].[Student]...';


GO
CREATE TABLE [dbo].[Student] (
    [studentId] INT           NOT NULL,
    [firstName] NVARCHAR (50) NOT NULL,
    [surName]   NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([studentId] ASC)
);


GO
PRINT N'Creating [dbo].[Teacher]...';


GO
CREATE TABLE [dbo].[Teacher] (
    [teacherId] INT           NOT NULL,
    [firstName] NVARCHAR (50) NOT NULL,
    [surname]   NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([teacherId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Enrollment_Student]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrollment_Student] FOREIGN KEY ([studentId]) REFERENCES [dbo].[Student] ([studentId]);


GO
PRINT N'Creating [dbo].[FK_Enrollment_Class]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrollment_Class] FOREIGN KEY ([classId]) REFERENCES [dbo].[Class] ([classId]);


GO
PRINT N'Creating [dbo].[FK_Log_Student]...';


GO
ALTER TABLE [dbo].[Log] WITH NOCHECK
    ADD CONSTRAINT [FK_Log_Student] FOREIGN KEY ([studentId]) REFERENCES [dbo].[Student] ([studentId]);


GO
PRINT N'Creating [dbo].[FK_Log_Class]...';


GO
ALTER TABLE [dbo].[Log] WITH NOCHECK
    ADD CONSTRAINT [FK_Log_Class] FOREIGN KEY ([classId]) REFERENCES [dbo].[Class] ([classId]);


GO
PRINT N'Creating [dbo].[FK_Log_Teacher]...';


GO
ALTER TABLE [dbo].[Log] WITH NOCHECK
    ADD CONSTRAINT [FK_Log_Teacher] FOREIGN KEY ([teacherId]) REFERENCES [dbo].[Teacher] ([teacherId]);


GO
PRINT N'Creating [dbo].[FK_Log_Room]...';


GO
ALTER TABLE [dbo].[Log] WITH NOCHECK
    ADD CONSTRAINT [FK_Log_Room] FOREIGN KEY ([roomId]) REFERENCES [dbo].[Room] ([roomId]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


INSERT INTO Student (studentId, firstName, surName)
VALUES (1, 'Test', 'Man');
INSERT INTO Student (studentId, firstName, surName)
VALUES (2, 'Pepis', 'Man');

INSERT INTO Teacher (teacherId, firstName, surname)
VALUES (10, 'Here', 'BePerson');
INSERT INTO Teacher (teacherId, firstName, surname)
VALUES (15, 'No', 'One');

INSERT INTO Room (roomId)
VALUES ('AB500');
INSERT INTO Room (roomId)
VALUES ('TL500');

INSERT INTO Class (classId, day, startTime, endTime, [name], labels)
VALUES (12, 'Wednesday', '08:30:00.00000', '11:30:00.00000', 'Design A Database', 'group 1');
INSERT INTO Class (classId, day, startTime, endTime, [name], labels)
VALUES (13, 'Friday', '08:30:00.00000', '11:30:00.00000', 'Sustainablity', 'group 1');

INSERT INTO Enrollment (classId, studentId)
VALUES (12, 1);
INSERT INTO Enrollment (classId, studentId)
VALUES (13, 1);
INSERT INTO Enrollment (classId, studentId)
VALUES (13, 2);

INSERT INTO [Log] (studentId, classId, [time], actionPerformed, teacherId, roomId, [date], studentFName, studentSurname)
VALUES (1, 12, '09:30:52', 'Signed In', 10, 'AB500', '2019-11-19', 'Test', 'Man');
INSERT INTO [Log] (studentId, classId, [time], actionPerformed, teacherId, roomId, [date], studentFName, studentSurname)
VALUES (1, 13, '09:35:52', 'Signed In', 10, 'AB500', '2019-11-21', 'Test', 'Man');
INSERT INTO [Log] (studentId, classId, [time], actionPerformed, teacherId, roomId, [date], studentFName, studentSurname)
VALUES (2, 13, '10:35:52', 'Signed In', 10, 'AB500', '2019-11-21', 'Pepis', 'Man');
GO

GO
